// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: obj/Debug/CWashExecutionService.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1 {
  public static partial class CWashExecutionService
  {
    static readonly string __ServiceName = "sila2.cytena.cwash.features.cwashexecutionservice.v1.CWashExecutionService";

    static readonly grpc::Marshaller<global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteCommand_Parameters> __Marshaller_sila2_cytena_cwash_features_cwashexecutionservice_v1_ExecuteCommand_Parameters = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteCommand_Parameters.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteCommand_Responses> __Marshaller_sila2_cytena_cwash_features_cwashexecutionservice_v1_ExecuteCommand_Responses = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteCommand_Responses.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteProtocol_Parameters> __Marshaller_sila2_cytena_cwash_features_cwashexecutionservice_v1_ExecuteProtocol_Parameters = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteProtocol_Parameters.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Sila2.Org.Silastandard.CommandConfirmation> __Marshaller_sila2_org_silastandard_CommandConfirmation = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sila2.Org.Silastandard.CommandConfirmation.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Sila2.Org.Silastandard.CommandExecutionUUID> __Marshaller_sila2_org_silastandard_CommandExecutionUUID = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sila2.Org.Silastandard.CommandExecutionUUID.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Sila2.Org.Silastandard.ExecutionInfo> __Marshaller_sila2_org_silastandard_ExecutionInfo = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sila2.Org.Silastandard.ExecutionInfo.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteProtocol_Responses> __Marshaller_sila2_cytena_cwash_features_cwashexecutionservice_v1_ExecuteProtocol_Responses = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteProtocol_Responses.Parser.ParseFrom);

    static readonly grpc::Method<global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteCommand_Parameters, global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteCommand_Responses> __Method_ExecuteCommand = new grpc::Method<global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteCommand_Parameters, global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteCommand_Responses>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExecuteCommand",
        __Marshaller_sila2_cytena_cwash_features_cwashexecutionservice_v1_ExecuteCommand_Parameters,
        __Marshaller_sila2_cytena_cwash_features_cwashexecutionservice_v1_ExecuteCommand_Responses);

    static readonly grpc::Method<global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteProtocol_Parameters, global::Sila2.Org.Silastandard.CommandConfirmation> __Method_ExecuteProtocol = new grpc::Method<global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteProtocol_Parameters, global::Sila2.Org.Silastandard.CommandConfirmation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExecuteProtocol",
        __Marshaller_sila2_cytena_cwash_features_cwashexecutionservice_v1_ExecuteProtocol_Parameters,
        __Marshaller_sila2_org_silastandard_CommandConfirmation);

    static readonly grpc::Method<global::Sila2.Org.Silastandard.CommandExecutionUUID, global::Sila2.Org.Silastandard.ExecutionInfo> __Method_ExecuteProtocol_Info = new grpc::Method<global::Sila2.Org.Silastandard.CommandExecutionUUID, global::Sila2.Org.Silastandard.ExecutionInfo>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ExecuteProtocol_Info",
        __Marshaller_sila2_org_silastandard_CommandExecutionUUID,
        __Marshaller_sila2_org_silastandard_ExecutionInfo);

    static readonly grpc::Method<global::Sila2.Org.Silastandard.CommandExecutionUUID, global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteProtocol_Responses> __Method_ExecuteProtocol_Result = new grpc::Method<global::Sila2.Org.Silastandard.CommandExecutionUUID, global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteProtocol_Responses>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExecuteProtocol_Result",
        __Marshaller_sila2_org_silastandard_CommandExecutionUUID,
        __Marshaller_sila2_cytena_cwash_features_cwashexecutionservice_v1_ExecuteProtocol_Responses);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.CWashExecutionServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CWashExecutionService</summary>
    public abstract partial class CWashExecutionServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteCommand_Responses> ExecuteCommand(global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteCommand_Parameters request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Sila2.Org.Silastandard.CommandConfirmation> ExecuteProtocol(global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteProtocol_Parameters request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task ExecuteProtocol_Info(global::Sila2.Org.Silastandard.CommandExecutionUUID request, grpc::IServerStreamWriter<global::Sila2.Org.Silastandard.ExecutionInfo> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteProtocol_Responses> ExecuteProtocol_Result(global::Sila2.Org.Silastandard.CommandExecutionUUID request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CWashExecutionService</summary>
    public partial class CWashExecutionServiceClient : grpc::ClientBase<CWashExecutionServiceClient>
    {
      /// <summary>Creates a new client for CWashExecutionService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public CWashExecutionServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CWashExecutionService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public CWashExecutionServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected CWashExecutionServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected CWashExecutionServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteCommand_Responses ExecuteCommand(global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteCommand_Parameters request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExecuteCommand(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteCommand_Responses ExecuteCommand(global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteCommand_Parameters request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExecuteCommand, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteCommand_Responses> ExecuteCommandAsync(global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteCommand_Parameters request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExecuteCommandAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteCommand_Responses> ExecuteCommandAsync(global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteCommand_Parameters request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExecuteCommand, null, options, request);
      }
      public virtual global::Sila2.Org.Silastandard.CommandConfirmation ExecuteProtocol(global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteProtocol_Parameters request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExecuteProtocol(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Sila2.Org.Silastandard.CommandConfirmation ExecuteProtocol(global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteProtocol_Parameters request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExecuteProtocol, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Sila2.Org.Silastandard.CommandConfirmation> ExecuteProtocolAsync(global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteProtocol_Parameters request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExecuteProtocolAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Sila2.Org.Silastandard.CommandConfirmation> ExecuteProtocolAsync(global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteProtocol_Parameters request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExecuteProtocol, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Sila2.Org.Silastandard.ExecutionInfo> ExecuteProtocol_Info(global::Sila2.Org.Silastandard.CommandExecutionUUID request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExecuteProtocol_Info(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Sila2.Org.Silastandard.ExecutionInfo> ExecuteProtocol_Info(global::Sila2.Org.Silastandard.CommandExecutionUUID request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ExecuteProtocol_Info, null, options, request);
      }
      public virtual global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteProtocol_Responses ExecuteProtocol_Result(global::Sila2.Org.Silastandard.CommandExecutionUUID request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExecuteProtocol_Result(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteProtocol_Responses ExecuteProtocol_Result(global::Sila2.Org.Silastandard.CommandExecutionUUID request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExecuteProtocol_Result, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteProtocol_Responses> ExecuteProtocol_ResultAsync(global::Sila2.Org.Silastandard.CommandExecutionUUID request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExecuteProtocol_ResultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Sila2.Cytena.Cwash.Features.Cwashexecutionservice.V1.ExecuteProtocol_Responses> ExecuteProtocol_ResultAsync(global::Sila2.Org.Silastandard.CommandExecutionUUID request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExecuteProtocol_Result, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override CWashExecutionServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CWashExecutionServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(CWashExecutionServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ExecuteCommand, serviceImpl.ExecuteCommand)
          .AddMethod(__Method_ExecuteProtocol, serviceImpl.ExecuteProtocol)
          .AddMethod(__Method_ExecuteProtocol_Info, serviceImpl.ExecuteProtocol_Info)
          .AddMethod(__Method_ExecuteProtocol_Result, serviceImpl.ExecuteProtocol_Result).Build();
    }

    /// <summary>Register service method implementations with a service binder. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CWashExecutionServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ExecuteCommand, serviceImpl.ExecuteCommand);
      serviceBinder.AddMethod(__Method_ExecuteProtocol, serviceImpl.ExecuteProtocol);
      serviceBinder.AddMethod(__Method_ExecuteProtocol_Info, serviceImpl.ExecuteProtocol_Info);
      serviceBinder.AddMethod(__Method_ExecuteProtocol_Result, serviceImpl.ExecuteProtocol_Result);
    }

  }
}
#endregion
