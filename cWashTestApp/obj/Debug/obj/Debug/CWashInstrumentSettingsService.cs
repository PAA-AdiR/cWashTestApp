// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: obj/Debug/CWashInstrumentSettingsService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1 {

  /// <summary>Holder for reflection information generated from obj/Debug/CWashInstrumentSettingsService.proto</summary>
  public static partial class CWashInstrumentSettingsServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for obj/Debug/CWashInstrumentSettingsService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CWashInstrumentSettingsServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5vYmovRGVidWcvQ1dhc2hJbnN0cnVtZW50U2V0dGluZ3NTZXJ2aWNlLnBy",
            "b3RvEj1zaWxhMi5jeXRlbmEuY3dhc2guZmVhdHVyZXMuY3dhc2hpbnN0cnVt",
            "ZW50c2V0dGluZ3NzZXJ2aWNlLnYxGhNTaUxBRnJhbWV3b3JrLnByb3RvIvsC",
            "Ch5EYXRhVHlwZV9JbnN0cnVtZW50SW5mb3JtYXRpb24SmQEKFUluc3RydW1l",
            "bnRJbmZvcm1hdGlvbhgBIAEoCzJ6LnNpbGEyLmN5dGVuYS5jd2FzaC5mZWF0",
            "dXJlcy5jd2FzaGluc3RydW1lbnRzZXR0aW5nc3NlcnZpY2UudjEuRGF0YVR5",
            "cGVfSW5zdHJ1bWVudEluZm9ybWF0aW9uLkluc3RydW1lbnRJbmZvcm1hdGlv",
            "bl9TdHJ1Y3QavAEKHEluc3RydW1lbnRJbmZvcm1hdGlvbl9TdHJ1Y3QSLQoF",
            "TW9kZWwYASABKAsyHi5zaWxhMi5vcmcuc2lsYXN0YW5kYXJkLlN0cmluZxI0",
            "CgxTZXJpYWxOdW1iZXIYAiABKAsyHi5zaWxhMi5vcmcuc2lsYXN0YW5kYXJk",
            "LlN0cmluZxI3Cg9GaXJtd2FyZVZlcnNpb24YAyABKAsyHi5zaWxhMi5vcmcu",
            "c2lsYXN0YW5kYXJkLlN0cmluZyKqAwoeRGF0YVR5cGVfRXRoZXJuZXRDb25m",
            "aWd1cmF0aW9uEpkBChVFdGhlcm5ldENvbmZpZ3VyYXRpb24YASABKAsyei5z",
            "aWxhMi5jeXRlbmEuY3dhc2guZmVhdHVyZXMuY3dhc2hpbnN0cnVtZW50c2V0",
            "dGluZ3NzZXJ2aWNlLnYxLkRhdGFUeXBlX0V0aGVybmV0Q29uZmlndXJhdGlv",
            "bi5FdGhlcm5ldENvbmZpZ3VyYXRpb25fU3RydWN0GusBChxFdGhlcm5ldENv",
            "bmZpZ3VyYXRpb25fU3RydWN0EiwKBFR5cGUYASABKAsyHi5zaWxhMi5vcmcu",
            "c2lsYXN0YW5kYXJkLlN0cmluZxIxCglJcEFkZHJlc3MYAiABKAsyHi5zaWxh",
            "Mi5vcmcuc2lsYXN0YW5kYXJkLlN0cmluZxIyCgpTdWJuZXRNYXNrGAMgASgL",
            "Mh4uc2lsYTIub3JnLnNpbGFzdGFuZGFyZC5TdHJpbmcSNgoORGVmYXVsdEdh",
            "dGV3YXkYBCABKAsyHi5zaWxhMi5vcmcuc2lsYXN0YW5kYXJkLlN0cmluZyIl",
            "CiNHZXRJbnN0cnVtZW50SW5mb3JtYXRpb25fUGFyYW1ldGVycyKiAQoiR2V0",
            "SW5zdHJ1bWVudEluZm9ybWF0aW9uX1Jlc3BvbnNlcxJ8ChVJbnN0cnVtZW50",
            "SW5mb3JtYXRpb24YASABKAsyXS5zaWxhMi5jeXRlbmEuY3dhc2guZmVhdHVy",
            "ZXMuY3dhc2hpbnN0cnVtZW50c2V0dGluZ3NzZXJ2aWNlLnYxLkRhdGFUeXBl",
            "X0luc3RydW1lbnRJbmZvcm1hdGlvbiIlCiNHZXRFdGhlcm5ldENvbmZpZ3Vy",
            "YXRpb25fUGFyYW1ldGVycyKiAQoiR2V0RXRoZXJuZXRDb25maWd1cmF0aW9u",
            "X1Jlc3BvbnNlcxJ8ChVFdGhlcm5ldENvbmZpZ3VyYXRpb24YASABKAsyXS5z",
            "aWxhMi5jeXRlbmEuY3dhc2guZmVhdHVyZXMuY3dhc2hpbnN0cnVtZW50c2V0",
            "dGluZ3NzZXJ2aWNlLnYxLkRhdGFUeXBlX0V0aGVybmV0Q29uZmlndXJhdGlv",
            "biKjAQojU2V0RXRoZXJuZXRDb25maWd1cmF0aW9uX1BhcmFtZXRlcnMSfAoV",
            "RXRoZXJuZXRDb25maWd1cmF0aW9uGAEgASgLMl0uc2lsYTIuY3l0ZW5hLmN3",
            "YXNoLmZlYXR1cmVzLmN3YXNoaW5zdHJ1bWVudHNldHRpbmdzc2VydmljZS52",
            "MS5EYXRhVHlwZV9FdGhlcm5ldENvbmZpZ3VyYXRpb24iJAoiU2V0RXRoZXJu",
            "ZXRDb25maWd1cmF0aW9uX1Jlc3BvbnNlczLSBQoeQ1dhc2hJbnN0cnVtZW50",
            "U2V0dGluZ3NTZXJ2aWNlEuMBChhHZXRJbnN0cnVtZW50SW5mb3JtYXRpb24S",
            "Yi5zaWxhMi5jeXRlbmEuY3dhc2guZmVhdHVyZXMuY3dhc2hpbnN0cnVtZW50",
            "c2V0dGluZ3NzZXJ2aWNlLnYxLkdldEluc3RydW1lbnRJbmZvcm1hdGlvbl9Q",
            "YXJhbWV0ZXJzGmEuc2lsYTIuY3l0ZW5hLmN3YXNoLmZlYXR1cmVzLmN3YXNo",
            "aW5zdHJ1bWVudHNldHRpbmdzc2VydmljZS52MS5HZXRJbnN0cnVtZW50SW5m",
            "b3JtYXRpb25fUmVzcG9uc2VzIgAS4wEKGEdldEV0aGVybmV0Q29uZmlndXJh",
            "dGlvbhJiLnNpbGEyLmN5dGVuYS5jd2FzaC5mZWF0dXJlcy5jd2FzaGluc3Ry",
            "dW1lbnRzZXR0aW5nc3NlcnZpY2UudjEuR2V0RXRoZXJuZXRDb25maWd1cmF0",
            "aW9uX1BhcmFtZXRlcnMaYS5zaWxhMi5jeXRlbmEuY3dhc2guZmVhdHVyZXMu",
            "Y3dhc2hpbnN0cnVtZW50c2V0dGluZ3NzZXJ2aWNlLnYxLkdldEV0aGVybmV0",
            "Q29uZmlndXJhdGlvbl9SZXNwb25zZXMiABLjAQoYU2V0RXRoZXJuZXRDb25m",
            "aWd1cmF0aW9uEmIuc2lsYTIuY3l0ZW5hLmN3YXNoLmZlYXR1cmVzLmN3YXNo",
            "aW5zdHJ1bWVudHNldHRpbmdzc2VydmljZS52MS5TZXRFdGhlcm5ldENvbmZp",
            "Z3VyYXRpb25fUGFyYW1ldGVycxphLnNpbGEyLmN5dGVuYS5jd2FzaC5mZWF0",
            "dXJlcy5jd2FzaGluc3RydW1lbnRzZXR0aW5nc3NlcnZpY2UudjEuU2V0RXRo",
            "ZXJuZXRDb25maWd1cmF0aW9uX1Jlc3BvbnNlcyIAYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Sila2.Org.Silastandard.SiLAFrameworkReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_InstrumentInformation), global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_InstrumentInformation.Parser, new[]{ "InstrumentInformation" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_InstrumentInformation.Types.InstrumentInformation_Struct), global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_InstrumentInformation.Types.InstrumentInformation_Struct.Parser, new[]{ "Model", "SerialNumber", "FirmwareVersion" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration), global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration.Parser, new[]{ "EthernetConfiguration" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration.Types.EthernetConfiguration_Struct), global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration.Types.EthernetConfiguration_Struct.Parser, new[]{ "Type", "IpAddress", "SubnetMask", "DefaultGateway" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.GetInstrumentInformation_Parameters), global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.GetInstrumentInformation_Parameters.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.GetInstrumentInformation_Responses), global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.GetInstrumentInformation_Responses.Parser, new[]{ "InstrumentInformation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.GetEthernetConfiguration_Parameters), global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.GetEthernetConfiguration_Parameters.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.GetEthernetConfiguration_Responses), global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.GetEthernetConfiguration_Responses.Parser, new[]{ "EthernetConfiguration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.SetEthernetConfiguration_Parameters), global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.SetEthernetConfiguration_Parameters.Parser, new[]{ "EthernetConfiguration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.SetEthernetConfiguration_Responses), global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.SetEthernetConfiguration_Responses.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DataType_InstrumentInformation : pb::IMessage<DataType_InstrumentInformation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataType_InstrumentInformation> _parser = new pb::MessageParser<DataType_InstrumentInformation>(() => new DataType_InstrumentInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataType_InstrumentInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.CWashInstrumentSettingsServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataType_InstrumentInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataType_InstrumentInformation(DataType_InstrumentInformation other) : this() {
      instrumentInformation_ = other.instrumentInformation_ != null ? other.instrumentInformation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataType_InstrumentInformation Clone() {
      return new DataType_InstrumentInformation(this);
    }

    /// <summary>Field number for the "InstrumentInformation" field.</summary>
    public const int InstrumentInformationFieldNumber = 1;
    private global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_InstrumentInformation.Types.InstrumentInformation_Struct instrumentInformation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_InstrumentInformation.Types.InstrumentInformation_Struct InstrumentInformation {
      get { return instrumentInformation_; }
      set {
        instrumentInformation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataType_InstrumentInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataType_InstrumentInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InstrumentInformation, other.InstrumentInformation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (instrumentInformation_ != null) hash ^= InstrumentInformation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (instrumentInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InstrumentInformation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (instrumentInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InstrumentInformation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (instrumentInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstrumentInformation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataType_InstrumentInformation other) {
      if (other == null) {
        return;
      }
      if (other.instrumentInformation_ != null) {
        if (instrumentInformation_ == null) {
          InstrumentInformation = new global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_InstrumentInformation.Types.InstrumentInformation_Struct();
        }
        InstrumentInformation.MergeFrom(other.InstrumentInformation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (instrumentInformation_ == null) {
              InstrumentInformation = new global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_InstrumentInformation.Types.InstrumentInformation_Struct();
            }
            input.ReadMessage(InstrumentInformation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (instrumentInformation_ == null) {
              InstrumentInformation = new global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_InstrumentInformation.Types.InstrumentInformation_Struct();
            }
            input.ReadMessage(InstrumentInformation);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DataType_InstrumentInformation message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class InstrumentInformation_Struct : pb::IMessage<InstrumentInformation_Struct>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InstrumentInformation_Struct> _parser = new pb::MessageParser<InstrumentInformation_Struct>(() => new InstrumentInformation_Struct());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InstrumentInformation_Struct> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_InstrumentInformation.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InstrumentInformation_Struct() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InstrumentInformation_Struct(InstrumentInformation_Struct other) : this() {
          model_ = other.model_ != null ? other.model_.Clone() : null;
          serialNumber_ = other.serialNumber_ != null ? other.serialNumber_.Clone() : null;
          firmwareVersion_ = other.firmwareVersion_ != null ? other.firmwareVersion_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InstrumentInformation_Struct Clone() {
          return new InstrumentInformation_Struct(this);
        }

        /// <summary>Field number for the "Model" field.</summary>
        public const int ModelFieldNumber = 1;
        private global::Sila2.Org.Silastandard.String model_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Sila2.Org.Silastandard.String Model {
          get { return model_; }
          set {
            model_ = value;
          }
        }

        /// <summary>Field number for the "SerialNumber" field.</summary>
        public const int SerialNumberFieldNumber = 2;
        private global::Sila2.Org.Silastandard.String serialNumber_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Sila2.Org.Silastandard.String SerialNumber {
          get { return serialNumber_; }
          set {
            serialNumber_ = value;
          }
        }

        /// <summary>Field number for the "FirmwareVersion" field.</summary>
        public const int FirmwareVersionFieldNumber = 3;
        private global::Sila2.Org.Silastandard.String firmwareVersion_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Sila2.Org.Silastandard.String FirmwareVersion {
          get { return firmwareVersion_; }
          set {
            firmwareVersion_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InstrumentInformation_Struct);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InstrumentInformation_Struct other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Model, other.Model)) return false;
          if (!object.Equals(SerialNumber, other.SerialNumber)) return false;
          if (!object.Equals(FirmwareVersion, other.FirmwareVersion)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (model_ != null) hash ^= Model.GetHashCode();
          if (serialNumber_ != null) hash ^= SerialNumber.GetHashCode();
          if (firmwareVersion_ != null) hash ^= FirmwareVersion.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (model_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Model);
          }
          if (serialNumber_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(SerialNumber);
          }
          if (firmwareVersion_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(FirmwareVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (model_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Model);
          }
          if (serialNumber_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(SerialNumber);
          }
          if (firmwareVersion_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(FirmwareVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (model_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Model);
          }
          if (serialNumber_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SerialNumber);
          }
          if (firmwareVersion_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FirmwareVersion);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InstrumentInformation_Struct other) {
          if (other == null) {
            return;
          }
          if (other.model_ != null) {
            if (model_ == null) {
              Model = new global::Sila2.Org.Silastandard.String();
            }
            Model.MergeFrom(other.Model);
          }
          if (other.serialNumber_ != null) {
            if (serialNumber_ == null) {
              SerialNumber = new global::Sila2.Org.Silastandard.String();
            }
            SerialNumber.MergeFrom(other.SerialNumber);
          }
          if (other.firmwareVersion_ != null) {
            if (firmwareVersion_ == null) {
              FirmwareVersion = new global::Sila2.Org.Silastandard.String();
            }
            FirmwareVersion.MergeFrom(other.FirmwareVersion);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (model_ == null) {
                  Model = new global::Sila2.Org.Silastandard.String();
                }
                input.ReadMessage(Model);
                break;
              }
              case 18: {
                if (serialNumber_ == null) {
                  SerialNumber = new global::Sila2.Org.Silastandard.String();
                }
                input.ReadMessage(SerialNumber);
                break;
              }
              case 26: {
                if (firmwareVersion_ == null) {
                  FirmwareVersion = new global::Sila2.Org.Silastandard.String();
                }
                input.ReadMessage(FirmwareVersion);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (model_ == null) {
                  Model = new global::Sila2.Org.Silastandard.String();
                }
                input.ReadMessage(Model);
                break;
              }
              case 18: {
                if (serialNumber_ == null) {
                  SerialNumber = new global::Sila2.Org.Silastandard.String();
                }
                input.ReadMessage(SerialNumber);
                break;
              }
              case 26: {
                if (firmwareVersion_ == null) {
                  FirmwareVersion = new global::Sila2.Org.Silastandard.String();
                }
                input.ReadMessage(FirmwareVersion);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class DataType_EthernetConfiguration : pb::IMessage<DataType_EthernetConfiguration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataType_EthernetConfiguration> _parser = new pb::MessageParser<DataType_EthernetConfiguration>(() => new DataType_EthernetConfiguration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataType_EthernetConfiguration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.CWashInstrumentSettingsServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataType_EthernetConfiguration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataType_EthernetConfiguration(DataType_EthernetConfiguration other) : this() {
      ethernetConfiguration_ = other.ethernetConfiguration_ != null ? other.ethernetConfiguration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataType_EthernetConfiguration Clone() {
      return new DataType_EthernetConfiguration(this);
    }

    /// <summary>Field number for the "EthernetConfiguration" field.</summary>
    public const int EthernetConfigurationFieldNumber = 1;
    private global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration.Types.EthernetConfiguration_Struct ethernetConfiguration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration.Types.EthernetConfiguration_Struct EthernetConfiguration {
      get { return ethernetConfiguration_; }
      set {
        ethernetConfiguration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataType_EthernetConfiguration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataType_EthernetConfiguration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EthernetConfiguration, other.EthernetConfiguration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ethernetConfiguration_ != null) hash ^= EthernetConfiguration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ethernetConfiguration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EthernetConfiguration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ethernetConfiguration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EthernetConfiguration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ethernetConfiguration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EthernetConfiguration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataType_EthernetConfiguration other) {
      if (other == null) {
        return;
      }
      if (other.ethernetConfiguration_ != null) {
        if (ethernetConfiguration_ == null) {
          EthernetConfiguration = new global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration.Types.EthernetConfiguration_Struct();
        }
        EthernetConfiguration.MergeFrom(other.EthernetConfiguration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ethernetConfiguration_ == null) {
              EthernetConfiguration = new global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration.Types.EthernetConfiguration_Struct();
            }
            input.ReadMessage(EthernetConfiguration);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (ethernetConfiguration_ == null) {
              EthernetConfiguration = new global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration.Types.EthernetConfiguration_Struct();
            }
            input.ReadMessage(EthernetConfiguration);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DataType_EthernetConfiguration message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class EthernetConfiguration_Struct : pb::IMessage<EthernetConfiguration_Struct>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<EthernetConfiguration_Struct> _parser = new pb::MessageParser<EthernetConfiguration_Struct>(() => new EthernetConfiguration_Struct());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EthernetConfiguration_Struct> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EthernetConfiguration_Struct() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EthernetConfiguration_Struct(EthernetConfiguration_Struct other) : this() {
          type_ = other.type_ != null ? other.type_.Clone() : null;
          ipAddress_ = other.ipAddress_ != null ? other.ipAddress_.Clone() : null;
          subnetMask_ = other.subnetMask_ != null ? other.subnetMask_.Clone() : null;
          defaultGateway_ = other.defaultGateway_ != null ? other.defaultGateway_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EthernetConfiguration_Struct Clone() {
          return new EthernetConfiguration_Struct(this);
        }

        /// <summary>Field number for the "Type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::Sila2.Org.Silastandard.String type_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Sila2.Org.Silastandard.String Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "IpAddress" field.</summary>
        public const int IpAddressFieldNumber = 2;
        private global::Sila2.Org.Silastandard.String ipAddress_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Sila2.Org.Silastandard.String IpAddress {
          get { return ipAddress_; }
          set {
            ipAddress_ = value;
          }
        }

        /// <summary>Field number for the "SubnetMask" field.</summary>
        public const int SubnetMaskFieldNumber = 3;
        private global::Sila2.Org.Silastandard.String subnetMask_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Sila2.Org.Silastandard.String SubnetMask {
          get { return subnetMask_; }
          set {
            subnetMask_ = value;
          }
        }

        /// <summary>Field number for the "DefaultGateway" field.</summary>
        public const int DefaultGatewayFieldNumber = 4;
        private global::Sila2.Org.Silastandard.String defaultGateway_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Sila2.Org.Silastandard.String DefaultGateway {
          get { return defaultGateway_; }
          set {
            defaultGateway_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EthernetConfiguration_Struct);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EthernetConfiguration_Struct other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Type, other.Type)) return false;
          if (!object.Equals(IpAddress, other.IpAddress)) return false;
          if (!object.Equals(SubnetMask, other.SubnetMask)) return false;
          if (!object.Equals(DefaultGateway, other.DefaultGateway)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (type_ != null) hash ^= Type.GetHashCode();
          if (ipAddress_ != null) hash ^= IpAddress.GetHashCode();
          if (subnetMask_ != null) hash ^= SubnetMask.GetHashCode();
          if (defaultGateway_ != null) hash ^= DefaultGateway.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (type_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Type);
          }
          if (ipAddress_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(IpAddress);
          }
          if (subnetMask_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(SubnetMask);
          }
          if (defaultGateway_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(DefaultGateway);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (type_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Type);
          }
          if (ipAddress_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(IpAddress);
          }
          if (subnetMask_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(SubnetMask);
          }
          if (defaultGateway_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(DefaultGateway);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (type_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
          }
          if (ipAddress_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(IpAddress);
          }
          if (subnetMask_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubnetMask);
          }
          if (defaultGateway_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefaultGateway);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EthernetConfiguration_Struct other) {
          if (other == null) {
            return;
          }
          if (other.type_ != null) {
            if (type_ == null) {
              Type = new global::Sila2.Org.Silastandard.String();
            }
            Type.MergeFrom(other.Type);
          }
          if (other.ipAddress_ != null) {
            if (ipAddress_ == null) {
              IpAddress = new global::Sila2.Org.Silastandard.String();
            }
            IpAddress.MergeFrom(other.IpAddress);
          }
          if (other.subnetMask_ != null) {
            if (subnetMask_ == null) {
              SubnetMask = new global::Sila2.Org.Silastandard.String();
            }
            SubnetMask.MergeFrom(other.SubnetMask);
          }
          if (other.defaultGateway_ != null) {
            if (defaultGateway_ == null) {
              DefaultGateway = new global::Sila2.Org.Silastandard.String();
            }
            DefaultGateway.MergeFrom(other.DefaultGateway);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (type_ == null) {
                  Type = new global::Sila2.Org.Silastandard.String();
                }
                input.ReadMessage(Type);
                break;
              }
              case 18: {
                if (ipAddress_ == null) {
                  IpAddress = new global::Sila2.Org.Silastandard.String();
                }
                input.ReadMessage(IpAddress);
                break;
              }
              case 26: {
                if (subnetMask_ == null) {
                  SubnetMask = new global::Sila2.Org.Silastandard.String();
                }
                input.ReadMessage(SubnetMask);
                break;
              }
              case 34: {
                if (defaultGateway_ == null) {
                  DefaultGateway = new global::Sila2.Org.Silastandard.String();
                }
                input.ReadMessage(DefaultGateway);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (type_ == null) {
                  Type = new global::Sila2.Org.Silastandard.String();
                }
                input.ReadMessage(Type);
                break;
              }
              case 18: {
                if (ipAddress_ == null) {
                  IpAddress = new global::Sila2.Org.Silastandard.String();
                }
                input.ReadMessage(IpAddress);
                break;
              }
              case 26: {
                if (subnetMask_ == null) {
                  SubnetMask = new global::Sila2.Org.Silastandard.String();
                }
                input.ReadMessage(SubnetMask);
                break;
              }
              case 34: {
                if (defaultGateway_ == null) {
                  DefaultGateway = new global::Sila2.Org.Silastandard.String();
                }
                input.ReadMessage(DefaultGateway);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class GetInstrumentInformation_Parameters : pb::IMessage<GetInstrumentInformation_Parameters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetInstrumentInformation_Parameters> _parser = new pb::MessageParser<GetInstrumentInformation_Parameters>(() => new GetInstrumentInformation_Parameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInstrumentInformation_Parameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.CWashInstrumentSettingsServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInstrumentInformation_Parameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInstrumentInformation_Parameters(GetInstrumentInformation_Parameters other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInstrumentInformation_Parameters Clone() {
      return new GetInstrumentInformation_Parameters(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInstrumentInformation_Parameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInstrumentInformation_Parameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInstrumentInformation_Parameters other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class GetInstrumentInformation_Responses : pb::IMessage<GetInstrumentInformation_Responses>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetInstrumentInformation_Responses> _parser = new pb::MessageParser<GetInstrumentInformation_Responses>(() => new GetInstrumentInformation_Responses());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInstrumentInformation_Responses> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.CWashInstrumentSettingsServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInstrumentInformation_Responses() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInstrumentInformation_Responses(GetInstrumentInformation_Responses other) : this() {
      instrumentInformation_ = other.instrumentInformation_ != null ? other.instrumentInformation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInstrumentInformation_Responses Clone() {
      return new GetInstrumentInformation_Responses(this);
    }

    /// <summary>Field number for the "InstrumentInformation" field.</summary>
    public const int InstrumentInformationFieldNumber = 1;
    private global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_InstrumentInformation instrumentInformation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_InstrumentInformation InstrumentInformation {
      get { return instrumentInformation_; }
      set {
        instrumentInformation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInstrumentInformation_Responses);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInstrumentInformation_Responses other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InstrumentInformation, other.InstrumentInformation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (instrumentInformation_ != null) hash ^= InstrumentInformation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (instrumentInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InstrumentInformation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (instrumentInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InstrumentInformation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (instrumentInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstrumentInformation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInstrumentInformation_Responses other) {
      if (other == null) {
        return;
      }
      if (other.instrumentInformation_ != null) {
        if (instrumentInformation_ == null) {
          InstrumentInformation = new global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_InstrumentInformation();
        }
        InstrumentInformation.MergeFrom(other.InstrumentInformation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (instrumentInformation_ == null) {
              InstrumentInformation = new global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_InstrumentInformation();
            }
            input.ReadMessage(InstrumentInformation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (instrumentInformation_ == null) {
              InstrumentInformation = new global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_InstrumentInformation();
            }
            input.ReadMessage(InstrumentInformation);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetEthernetConfiguration_Parameters : pb::IMessage<GetEthernetConfiguration_Parameters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetEthernetConfiguration_Parameters> _parser = new pb::MessageParser<GetEthernetConfiguration_Parameters>(() => new GetEthernetConfiguration_Parameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetEthernetConfiguration_Parameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.CWashInstrumentSettingsServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEthernetConfiguration_Parameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEthernetConfiguration_Parameters(GetEthernetConfiguration_Parameters other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEthernetConfiguration_Parameters Clone() {
      return new GetEthernetConfiguration_Parameters(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetEthernetConfiguration_Parameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetEthernetConfiguration_Parameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetEthernetConfiguration_Parameters other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class GetEthernetConfiguration_Responses : pb::IMessage<GetEthernetConfiguration_Responses>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetEthernetConfiguration_Responses> _parser = new pb::MessageParser<GetEthernetConfiguration_Responses>(() => new GetEthernetConfiguration_Responses());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetEthernetConfiguration_Responses> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.CWashInstrumentSettingsServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEthernetConfiguration_Responses() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEthernetConfiguration_Responses(GetEthernetConfiguration_Responses other) : this() {
      ethernetConfiguration_ = other.ethernetConfiguration_ != null ? other.ethernetConfiguration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEthernetConfiguration_Responses Clone() {
      return new GetEthernetConfiguration_Responses(this);
    }

    /// <summary>Field number for the "EthernetConfiguration" field.</summary>
    public const int EthernetConfigurationFieldNumber = 1;
    private global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration ethernetConfiguration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration EthernetConfiguration {
      get { return ethernetConfiguration_; }
      set {
        ethernetConfiguration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetEthernetConfiguration_Responses);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetEthernetConfiguration_Responses other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EthernetConfiguration, other.EthernetConfiguration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ethernetConfiguration_ != null) hash ^= EthernetConfiguration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ethernetConfiguration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EthernetConfiguration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ethernetConfiguration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EthernetConfiguration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ethernetConfiguration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EthernetConfiguration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetEthernetConfiguration_Responses other) {
      if (other == null) {
        return;
      }
      if (other.ethernetConfiguration_ != null) {
        if (ethernetConfiguration_ == null) {
          EthernetConfiguration = new global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration();
        }
        EthernetConfiguration.MergeFrom(other.EthernetConfiguration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ethernetConfiguration_ == null) {
              EthernetConfiguration = new global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration();
            }
            input.ReadMessage(EthernetConfiguration);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (ethernetConfiguration_ == null) {
              EthernetConfiguration = new global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration();
            }
            input.ReadMessage(EthernetConfiguration);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetEthernetConfiguration_Parameters : pb::IMessage<SetEthernetConfiguration_Parameters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetEthernetConfiguration_Parameters> _parser = new pb::MessageParser<SetEthernetConfiguration_Parameters>(() => new SetEthernetConfiguration_Parameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetEthernetConfiguration_Parameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.CWashInstrumentSettingsServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetEthernetConfiguration_Parameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetEthernetConfiguration_Parameters(SetEthernetConfiguration_Parameters other) : this() {
      ethernetConfiguration_ = other.ethernetConfiguration_ != null ? other.ethernetConfiguration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetEthernetConfiguration_Parameters Clone() {
      return new SetEthernetConfiguration_Parameters(this);
    }

    /// <summary>Field number for the "EthernetConfiguration" field.</summary>
    public const int EthernetConfigurationFieldNumber = 1;
    private global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration ethernetConfiguration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration EthernetConfiguration {
      get { return ethernetConfiguration_; }
      set {
        ethernetConfiguration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetEthernetConfiguration_Parameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetEthernetConfiguration_Parameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EthernetConfiguration, other.EthernetConfiguration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ethernetConfiguration_ != null) hash ^= EthernetConfiguration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ethernetConfiguration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EthernetConfiguration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ethernetConfiguration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EthernetConfiguration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ethernetConfiguration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EthernetConfiguration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetEthernetConfiguration_Parameters other) {
      if (other == null) {
        return;
      }
      if (other.ethernetConfiguration_ != null) {
        if (ethernetConfiguration_ == null) {
          EthernetConfiguration = new global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration();
        }
        EthernetConfiguration.MergeFrom(other.EthernetConfiguration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ethernetConfiguration_ == null) {
              EthernetConfiguration = new global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration();
            }
            input.ReadMessage(EthernetConfiguration);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (ethernetConfiguration_ == null) {
              EthernetConfiguration = new global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.DataType_EthernetConfiguration();
            }
            input.ReadMessage(EthernetConfiguration);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetEthernetConfiguration_Responses : pb::IMessage<SetEthernetConfiguration_Responses>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetEthernetConfiguration_Responses> _parser = new pb::MessageParser<SetEthernetConfiguration_Responses>(() => new SetEthernetConfiguration_Responses());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetEthernetConfiguration_Responses> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sila2.Cytena.Cwash.Features.Cwashinstrumentsettingsservice.V1.CWashInstrumentSettingsServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetEthernetConfiguration_Responses() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetEthernetConfiguration_Responses(SetEthernetConfiguration_Responses other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetEthernetConfiguration_Responses Clone() {
      return new SetEthernetConfiguration_Responses(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetEthernetConfiguration_Responses);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetEthernetConfiguration_Responses other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetEthernetConfiguration_Responses other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
